[{"/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/index.js":"1","/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/App.js":"2","/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/reportWebVitals.js":"3","/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/pizzerias/pizzeriaslist.js":"4","/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/pizzerias/pizzeriadetail.js":"5","/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/pizzerias/pizzeriaform.js":"6","/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/pizzerias/pizzeriaupdate.js":"7"},{"size":500,"mtime":1607457098372,"results":"8","hashOfConfig":"9"},{"size":456,"mtime":1607541096785,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607457098400,"results":"11","hashOfConfig":"9"},{"size":4119,"mtime":1607638172915,"results":"12","hashOfConfig":"9"},{"size":1595,"mtime":1607638146614,"results":"13","hashOfConfig":"9"},{"size":4895,"mtime":1607638049097,"results":"14","hashOfConfig":"9"},{"size":1475,"mtime":1607638134594,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1z0bhbx",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/index.js",[],["32","33"],"/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/App.js",[],"/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/reportWebVitals.js",[],"/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/pizzerias/pizzeriaslist.js",[],"/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/pizzerias/pizzeriadetail.js",[],"/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/pizzerias/pizzeriaform.js",["34"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass PizzaForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pizzeria_name: \" \",\n            street: \" \",\n            state: \" \",\n            zip_code: \" \",\n            website: \" \",\n            phone_number: \" \",\n            description: \" \",\n            email: \" \",\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n//    Сразу после отображения формы в браузере pizzeria_name представляет собой пустую строку.\n//    Это то, что мы установили в конструкторе по умолчанию. Как только мы получим значение\n//    от пользователя, мы будем командой setState переназначить pizzeria_name входящему тексту в методе handleChange.\n\n//  Метод handleSubmit будет запускаться при отправке, а метод handleChange - при вводе.\n//  Добавление обозначения «handle» к имени метода принято в React.\n\n//  handleChange(), будет запускаться для входящих данных и принимать событие в качестве аргумента.\n//  Более того, метод handleChange установит введенные данные как State.\n    handleChange(event) {\n//        Эта настройка поможет нам получить значения и присвоить их нужным атрибутам с помощью\n//        «name» и value keys из form.event.target.name дает нам возможность\n//        объединить несколько входных данных из нашей формы.\n        this.setState({[event.target.name]:event.target.value});\n    }\n\n//  Второй метод handleSubmit() вызовет axios.post() и отправит данные.\n//  Этот метод будет запускаться встроенным обработчиком onSubmit в форме.\n    handleSubmit(event) {\n        event.preventDefault();\n        axios\n            .post(\"http://127.0.0.1:8000/create/\", {\n                pizzeria_name: this.state.pizzeria_name,\n                street: this.state.street,\n                city: this.state.city,\n                state: this.state.state,\n                zip_code: this.state.zip_code,\n                website: this.state.website,\n                phone_number: this.state.phone_number,\n                description: this.state.description,\n                email: this.state.email,\n            })\n            .then((response) =>{\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    render() {\n        const {\n            pizzeria_name,\n            street,\n            city,\n            state,\n            zip_code,\n            website,\n            phone_number,\n            description,\n            email,\n            } = this.state;\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    Pizzeria <input type='text' name='pizzeria_name' value={pizzeria_name} onChange={this.handleChange}/>\n                </div>\n\n                <div>\n                    Address <input type='text' name='street' value={street} onChange={this.handleChange}/>\n                </div>\n\n                <div>\n                    City <input type='text' name='city' value={city} onChange={this.handleChange}/>\n                </div>\n\n                <div>\n                    State <input type='text' name='state' value={state} onChange={this.handleChange}/>\n                </div>\n\n                <div>\n                    Zip <input type='text' name='zip_code' value={zip_code} onChange={this.handleChange}/>\n                </div>\n\n                <div>\n                    Website <input type='text' name='website' value={website} onChange={this.handleChange}/>\n                </div>\n\n                <div>\n                    Phone <input type='text' name='phone_number' value={phone_number} onChange={this.handleChange}/>\n                </div>\n\n                <div>\n                    Description <input type='text' name='description' value={description} onChange={this.handleChange}/>\n                </div>\n\n                <div>\n                    Email <input type='text' name='email' value={email} onChange={this.handleChange}/>\n                </div>\n\n                <input style={{backgroundColor:'white'}} type='submit' value='Submit' />\n            </form>\n        );\n    }\n}\nexport default PizzaForm;","/home/potackow/PycharmProjects/pizzavspizza/pizzaproject/front_pizzavspizza/src/pizzerias/pizzeriaupdate.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]